name: Deploy Events

on:
  workflow_dispatch:
    inputs:
      HELM_ACTION:
        description: "Helm Action"
        required: true
        default: "plan"
        type: choice
        options:
          - install
          - update
          - delete
      DEPLOYMENT_STRATEGY:
        description: "Deployment Strategy"
        required: true
        default: "standard"
        type: choice
        options:
          - standard
          - blue
          - green
          - canary
jobs:
  build:
    runs-on: ubuntu-latest
    environment: Prod

    steps:
    - uses: actions/checkout@v4

    - name: Docker Hub login
      uses: docker/login-action@v3.4.0
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Login to AWS
      uses: aws-actions/configure-aws-credentials@v4.2.1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-1
    
    - name: Get secrets by name and by ARN
      uses: aws-actions/aws-secretsmanager-get-secrets@v2
      with:
        secret-ids: |
          ,arn:aws:secretsmanager:eu-west-1:670114001127:secret:eventsDb-RQMi9g
        parse-json-secrets: true

    - name: Configure Terraform
      working-directory: ./aws/terraform
      run: |
          sudo apt-get update && sudo apt-get install -y gnupg software-properties-common
          wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor | sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg > /dev/null
          gpg --no-default-keyring --keyring /usr/share/keyrings/hashicorp-archive-keyring.gpg --fingerprint
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(grep -oP '(?<=UBUNTU_CODENAME=).*' /etc/os-release || lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
          sudo apt update
          sudo apt-get install terraform
          terraform init

    - name: Set Variables
      working-directory: ./aws/terraform
      run: |
        echo PRIMARY_REGION="$(awk -F"=" '/^region/ {print $2}' terraform.tfvars | sed 's/\"//g')" >> $GITHUB_ENV
        echo SECONDARY_REGION="$(awk -F"=" '/^sec_region/ {print $2}' terraform.tfvars | sed 's/\"//g')" >> $GITHUB_ENV
        echo CLUSTER_NAME="$(awk -F"=" '/^cluster_name/ {print $2}' terraform.tfvars | sed 's/\"//g')" >> $GITHUB_ENV
    
    - name: Install Helm
      run: |
        curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
        chmod 700 get_helm.sh
        ./get_helm.sh

    - name: Install Helm Chart Primary
      working-directory: ./aws/terraform
      if: "${{ github.event.inputs.HELM_ACTION == 'install' }}"
      run: |
        aws eks --region $PRIMARY_REGION update-kubeconfig --name $CLUSTER_NAME
        terraform output -json | jq -r 'to_entries[] | "\(.key): \(.value.value)"' >> /tmp/values.yaml
        helm install -n default dbinit -f /tmp/values.yaml --set dbUser=$DBUSER --set dbPassword=$DBPASSWORD --set dbName=$DBNAME oci://registry-1.docker.io/jamesrelph/dbinit:1.1.0
        helm install events -f /tmp/values.yaml --set dbUser=$DBUSER --set dbPassword=$DBPASSWORD --set dbName=$DBNAME oci://registry-1.docker.io/jamesrelph/events
        
    - name: Install Helm Chart Secondary
      working-directory: ./aws/terraform
      if: "${{ github.event.inputs.HELM_ACTION == 'install' }}"
      run: |
        aws eks --region $SECONDARY_REGION update-kubeconfig --name $CLUSTER_NAME
        terraform output -json | jq -r 'to_entries[] | "\(.key): \(.value.value)"' >> /tmp/values.yaml
        helm install events -f /tmp/values.yaml --set dbUser=$DBUSER --set dbPassword=$DBPASSWORD --set dbName=$DBNAME oci://registry-1.docker.io/jamesrelph/events
      
    - name: Update Helm Chart Primary
      working-directory: ./aws/terraform
      if: "${{ github.event.inputs.HELM_ACTION == 'update' }}"
      run: |
        aws eks --region $PRIMARY_REGION update-kubeconfig --name $CLUSTER_NAME
        terraform output -json | jq -r 'to_entries[] | "\(.key): \(.value.value)"' >> /tmp/values.yaml
        helm install events -f /tmp/values.yaml --set dbUser=$DBUSER --set dbPassword=$DBPASSWORD --set dbName=$DBNAME oci://registry-1.docker.io/jamesrelph/events
        
    - name: Update Helm Chart Secondary
      working-directory: ./aws/terraform
      if: "${{ github.event.inputs.HELM_ACTION == 'update' }}"
      run: |
        aws eks --region $SECONDARY_REGION update-kubeconfig --name $CLUSTER_NAME
        terraform output -json | jq -r 'to_entries[] | "\(.key): \(.value.value)"' >> /tmp/values.yaml
        helm install events -f /tmp/values.yaml --set dbUser=$DBUSER --set dbPassword=$DBPASSWORD --set dbName=$DBNAME oci://registry-1.docker.io/jamesrelph/events

    - name: Delete Helm Chart Primary
      working-directory: ./aws/terraform
      if: "${{ github.event.inputs.HELM_ACTION == 'delete' }}"
      run: |
        helm delete events
        
    - name: Delete Helm Chart Secondary
      working-directory: ./aws/terraform
      if: "${{ github.event.inputs.HELM_ACTION == 'delete' }}"
      run: |
        helm delete events

    - name: Install Helm Chart Blue
      working-directory: ./aws/terraform
      if: "${{ github.event.inputs.HELM_ACTION == 'install' &&  github.event.inputs.DEPLOYMENT_STRATEGY == 'blue' }}"
      run: |
        aws eks --region $PRIMARY_REGION update-kubeconfig --name $CLUSTER_NAME
        terraform output -json | jq -r 'to_entries[] | "\(.key): \(.value.value)"' >> /tmp/values.yaml
        kubectl create namespace blue
        helm install events -f /tmp/values.yaml --set dbUser=$DBUSER --set dbPassword=$DBPASSWORD --set dbName=$DBNAME oci://registry-1.docker.io/jamesrelph/events
        
    - name: Install Helm Chart Blue Secondary
      working-directory: ./aws/terraform
      if: "${{ github.event.inputs.HELM_ACTION == 'install' && github.event.inputs.DEPLOYMENT_STRATEGY == 'blue' }}"
      run: |
        aws eks --region $SECONDARY_REGION update-kubeconfig --name $CLUSTER_NAME
        terraform output -json | jq -r 'to_entries[] | "\(.key): \(.value.value)"' >> /tmp/values.yaml
        kubectl create namespace blue
        helm install events -f /tmp/values.yaml --set dbUser=$DBUSER --set dbPassword=$DBPASSWORD --set dbName=$DBNAME oci://registry-1.docker.io/jamesrelph/events