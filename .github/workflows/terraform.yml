name: Terraform Control

on:
  workflow_dispatch:
    inputs:
      TERRAFORM_ACTION:
        description: "Terraform Action"
        required: true
        default: "plan"
        type: choice
        options:
          - plan
          - apply
          - destroy
    
jobs:
  build:
    runs-on: ubuntu-latest
    environment: Prod
    steps:
    - uses: actions/checkout@v4

    - name: Login to AWS
      uses: aws-actions/configure-aws-credentials@v4.2.1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

# Need to configure remote state here
    - name: Configure Terraform
      working-directory: ./aws
      run: |
          sudo apt-get update && sudo apt-get install -y gnupg software-properties-common
          wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor | sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg > /dev/null
          gpg --no-default-keyring --keyring /usr/share/keyrings/hashicorp-archive-keyring.gpg --fingerprint
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(grep -oP '(?<=UBUNTU_CODENAME=).*' /etc/os-release || lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
          sudo apt update
          sudo apt-get install terraform
          terraform init

    - name: Plan Terraform
      working-directory: ./aws
      if: "${{ github.event.inputs.TERRAFORM_ACTION == 'plan' }}"
      run: terraform plan

    - name: Apply Terraform
      working-directory: ./aws
      if: "${{ github.event.inputs.TERRAFORM_ACTION == 'apply' }}"
      run: terraform apply --auto-approve

    - name: Destroy Terraform
      working-directory: ./aws
      if: "${{ github.event.inputs.TERRAFORM_ACTION == 'destroy' }}"
      run: terraform apply --auto-approve


